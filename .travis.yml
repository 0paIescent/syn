sudo: false
language: rust

cache:
  directories:
    - tests/rust

rust:
  - nightly
  - stable
  - beta
  - 1.15.1

before_script:
  - set -o errexit

script:
  - cargo build --no-default-features
  - cargo build
  - cargo build --features full
  - cargo build --features 'fold visit visit-mut'
  - cargo build --features 'full fold visit visit-mut'
  - cargo build --no-default-features --features derive
  - cargo build --no-default-features --features 'derive parsing'
  - cargo build --no-default-features --features 'derive printing'
  - cargo build --no-default-features --features full
  - cargo build --no-default-features --features 'full parsing'
  - cargo build --no-default-features --features 'full printing'
  - cargo build --no-default-features --features 'full parsing printing'
  - cargo build --no-default-features --features 'fold visit visit-mut parsing printing'
  - cargo build --no-default-features --features 'full fold visit visit-mut parsing printing'

matrix:
  include:
    - rust: nightly
      env: ROLE=test
      script:
        - cargo test --all-features --release
    - rust: nightly
      env: ROLE=codegen
      script:
        - (cd codegen && cargo run)
        - git diff --exit-code
    - rust: nightly
      env: ROLE=minimal
      script:
        - cargo update -Z minimal-versions
        - cargo build --all-features
    - rust: nightly
      env: ROLE=clippy
      script:
        - rustup component add clippy-preview
        - cargo clippy --all-features -- -Dclippy
    - rust: nightly
      env: WASM32
      script:
        - CARGO_WEB_RELEASE=$(curl -L -s -H Accept:application/json https://github.com/koute/cargo-web/releases/latest)
        - CARGO_WEB_VERSION=$(echo "${CARGO_WEB_RELEASE}" | jq -r .tag_name)
        - CARGO_WEB_URL="https://github.com/koute/cargo-web/releases/download/${CARGO_WEB_VERSION}/cargo-web-x86_64-unknown-linux-gnu.gz"

        - nvm install 9
        - mkdir -p ~/.cargo/bin
        - curl -L "${CARGO_WEB_URL}" | gzip -d > ~/.cargo/bin/cargo-web
        - chmod +x ~/.cargo/bin/cargo-web

        - cargo web build --target=wasm32-unknown-unknown
  allow_failures:
    - rust: nightly
      env: ROLE=clippy
  fast_finish: true

env:
  matrix:
    - ROLE=build
  global:
    - RUST_MIN_STACK=20000000
