---
created: "2019-04-06T05:46:03.403744852Z"
creator: insta@0.7.4
source: tests/test_generics.rs
expression: syntax_tree
---
DeriveInput {
    attrs: [],
    vis: Inherited,
    ident: Ident(
        S,
    ),
    generics: Generics {
        lt_token: Some(
            Lt,
        ),
        params: [
            Lifetime(
                LifetimeDef {
                    attrs: [],
                    lifetime: Lifetime {
                        apostrophe: Span,
                        ident: Ident(
                            a,
                        ),
                    },
                    colon_token: None,
                    bounds: [],
                },
            ),
            Comma,
            Lifetime(
                LifetimeDef {
                    attrs: [],
                    lifetime: Lifetime {
                        apostrophe: Span,
                        ident: Ident(
                            b,
                        ),
                    },
                    colon_token: Some(
                        Colon,
                    ),
                    bounds: [
                        Lifetime {
                            apostrophe: Span,
                            ident: Ident(
                                a,
                            ),
                        },
                    ],
                },
            ),
            Comma,
            Type(
                TypeParam {
                    attrs: [
                        Attribute {
                            pound_token: Pound,
                            style: Outer,
                            bracket_token: Bracket,
                            path: Path {
                                leading_colon: None,
                                segments: [
                                    PathSegment {
                                        ident: Ident(
                                            may_dangle,
                                        ),
                                        arguments: None,
                                    },
                                ],
                            },
                            tts: TokenStream [],
                        },
                    ],
                    ident: Ident(
                        T,
                    ),
                    colon_token: Some(
                        Colon,
                    ),
                    bounds: [
                        Lifetime(
                            Lifetime {
                                apostrophe: Span,
                                ident: Ident(
                                    a,
                                ),
                            },
                        ),
                    ],
                    eq_token: Some(
                        Eq,
                    ),
                    default: Some(
                        Tuple(
                            TypeTuple {
                                paren_token: Paren,
                                elems: [],
                            },
                        ),
                    ),
                },
            ),
        ],
        gt_token: Some(
            Gt,
        ),
        where_clause: Some(
            WhereClause {
                where_token: Where,
                predicates: [
                    Type(
                        PredicateType {
                            lifetimes: None,
                            bounded_ty: Path(
                                TypePath {
                                    qself: None,
                                    path: Path {
                                        leading_colon: None,
                                        segments: [
                                            PathSegment {
                                                ident: Ident(
                                                    T,
                                                ),
                                                arguments: None,
                                            },
                                        ],
                                    },
                                },
                            ),
                            colon_token: Colon,
                            bounds: [
                                Trait(
                                    TraitBound {
                                        paren_token: None,
                                        modifier: None,
                                        lifetimes: None,
                                        path: Path {
                                            leading_colon: None,
                                            segments: [
                                                PathSegment {
                                                    ident: Ident(
                                                        Debug,
                                                    ),
                                                    arguments: None,
                                                },
                                            ],
                                        },
                                    },
                                ),
                            ],
                        },
                    ),
                ],
            },
        ),
    },
    data: Struct(
        DataStruct {
            struct_token: Struct,
            fields: Unit,
            semi_token: Some(
                Semi,
            ),
        },
    ),
}
