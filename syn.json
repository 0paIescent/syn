{
  "version": "0.15.26",
  "types": [
    {
      "node": "struct",
      "ident": "Abi",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "extern_token",
          "type": {
            "token": "Extern"
          }
        },
        {
          "ident": "name",
          "type": {
            "option": {
              "item": "LitStr"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "AngleBracketedGenericArguments",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "colon2_token",
          "type": {
            "option": {
              "token": "Colon2"
            }
          }
        },
        {
          "ident": "lt_token",
          "type": {
            "token": "Lt"
          }
        },
        {
          "ident": "args",
          "type": {
            "punctuated": {
              "element": {
                "item": "GenericArgument"
              },
              "punct": "Comma"
            }
          }
        },
        {
          "ident": "gt_token",
          "type": {
            "token": "Gt"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ArgCaptured",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "pat",
          "type": {
            "item": "Pat"
          }
        },
        {
          "ident": "colon_token",
          "type": {
            "token": "Colon"
          }
        },
        {
          "ident": "ty",
          "type": {
            "item": "Type"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ArgSelf",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "mutability",
          "type": {
            "option": {
              "token": "Mut"
            }
          }
        },
        {
          "ident": "self_token",
          "type": {
            "token": "SelfValue"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ArgSelfRef",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "and_token",
          "type": {
            "token": "And"
          }
        },
        {
          "ident": "lifetime",
          "type": {
            "option": {
              "item": "Lifetime"
            }
          }
        },
        {
          "ident": "mutability",
          "type": {
            "option": {
              "token": "Mut"
            }
          }
        },
        {
          "ident": "self_token",
          "type": {
            "token": "SelfValue"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "Arm",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "leading_vert",
          "type": {
            "option": {
              "token": "Or"
            }
          }
        },
        {
          "ident": "pats",
          "type": {
            "punctuated": {
              "element": {
                "item": "Pat"
              },
              "punct": "Or"
            }
          }
        },
        {
          "ident": "guard",
          "type": {
            "option": {
              "tuple": [
                {
                  "token": "If"
                },
                {
                  "box": {
                    "item": "Expr"
                  }
                }
              ]
            }
          }
        },
        {
          "ident": "fat_arrow_token",
          "type": {
            "token": "FatArrow"
          }
        },
        {
          "ident": "body",
          "type": {
            "box": {
              "item": "Expr"
            }
          }
        },
        {
          "ident": "comma",
          "type": {
            "option": {
              "token": "Comma"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "enum",
      "ident": "AttrStyle",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "variants": [
        {
          "ident": "Outer",
          "fields": []
        },
        {
          "ident": "Inner",
          "fields": [
            {
              "token": "Bang"
            }
          ]
        }
      ]
    },
    {
      "node": "struct",
      "ident": "Attribute",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "pound_token",
          "type": {
            "token": "Pound"
          }
        },
        {
          "ident": "style",
          "type": {
            "item": "AttrStyle"
          }
        },
        {
          "ident": "bracket_token",
          "type": {
            "group": "Bracket"
          }
        },
        {
          "ident": "path",
          "type": {
            "item": "Path"
          }
        },
        {
          "ident": "tts",
          "type": {
            "ext": "TokenStream"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "BareFnArg",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "name",
          "type": {
            "option": {
              "tuple": [
                {
                  "item": "BareFnArgName"
                },
                {
                  "token": "Colon"
                }
              ]
            }
          }
        },
        {
          "ident": "ty",
          "type": {
            "item": "Type"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "enum",
      "ident": "BareFnArgName",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "variants": [
        {
          "ident": "Named",
          "fields": [
            {
              "item": "Ident"
            }
          ]
        },
        {
          "ident": "Wild",
          "fields": [
            {
              "token": "Underscore"
            }
          ]
        }
      ]
    },
    {
      "node": "enum",
      "ident": "BinOp",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "variants": [
        {
          "ident": "Add",
          "fields": [
            {
              "token": "Add"
            }
          ]
        },
        {
          "ident": "Sub",
          "fields": [
            {
              "token": "Sub"
            }
          ]
        },
        {
          "ident": "Mul",
          "fields": [
            {
              "token": "Star"
            }
          ]
        },
        {
          "ident": "Div",
          "fields": [
            {
              "token": "Div"
            }
          ]
        },
        {
          "ident": "Rem",
          "fields": [
            {
              "token": "Rem"
            }
          ]
        },
        {
          "ident": "And",
          "fields": [
            {
              "token": "AndAnd"
            }
          ]
        },
        {
          "ident": "Or",
          "fields": [
            {
              "token": "OrOr"
            }
          ]
        },
        {
          "ident": "BitXor",
          "fields": [
            {
              "token": "Caret"
            }
          ]
        },
        {
          "ident": "BitAnd",
          "fields": [
            {
              "token": "And"
            }
          ]
        },
        {
          "ident": "BitOr",
          "fields": [
            {
              "token": "Or"
            }
          ]
        },
        {
          "ident": "Shl",
          "fields": [
            {
              "token": "Shl"
            }
          ]
        },
        {
          "ident": "Shr",
          "fields": [
            {
              "token": "Shr"
            }
          ]
        },
        {
          "ident": "Eq",
          "fields": [
            {
              "token": "EqEq"
            }
          ]
        },
        {
          "ident": "Lt",
          "fields": [
            {
              "token": "Lt"
            }
          ]
        },
        {
          "ident": "Le",
          "fields": [
            {
              "token": "Le"
            }
          ]
        },
        {
          "ident": "Ne",
          "fields": [
            {
              "token": "Ne"
            }
          ]
        },
        {
          "ident": "Ge",
          "fields": [
            {
              "token": "Ge"
            }
          ]
        },
        {
          "ident": "Gt",
          "fields": [
            {
              "token": "Gt"
            }
          ]
        },
        {
          "ident": "AddEq",
          "fields": [
            {
              "token": "AddEq"
            }
          ]
        },
        {
          "ident": "SubEq",
          "fields": [
            {
              "token": "SubEq"
            }
          ]
        },
        {
          "ident": "MulEq",
          "fields": [
            {
              "token": "MulEq"
            }
          ]
        },
        {
          "ident": "DivEq",
          "fields": [
            {
              "token": "DivEq"
            }
          ]
        },
        {
          "ident": "RemEq",
          "fields": [
            {
              "token": "RemEq"
            }
          ]
        },
        {
          "ident": "BitXorEq",
          "fields": [
            {
              "token": "CaretEq"
            }
          ]
        },
        {
          "ident": "BitAndEq",
          "fields": [
            {
              "token": "AndEq"
            }
          ]
        },
        {
          "ident": "BitOrEq",
          "fields": [
            {
              "token": "OrEq"
            }
          ]
        },
        {
          "ident": "ShlEq",
          "fields": [
            {
              "token": "ShlEq"
            }
          ]
        },
        {
          "ident": "ShrEq",
          "fields": [
            {
              "token": "ShrEq"
            }
          ]
        }
      ]
    },
    {
      "node": "struct",
      "ident": "Binding",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "ident",
          "type": {
            "item": "Ident"
          }
        },
        {
          "ident": "eq_token",
          "type": {
            "token": "Eq"
          }
        },
        {
          "ident": "ty",
          "type": {
            "item": "Type"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "Block",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "brace_token",
          "type": {
            "group": "Brace"
          }
        },
        {
          "ident": "stmts",
          "type": {
            "vec": {
              "item": "Stmt"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "BoundLifetimes",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "for_token",
          "type": {
            "token": "For"
          }
        },
        {
          "ident": "lt_token",
          "type": {
            "token": "Lt"
          }
        },
        {
          "ident": "lifetimes",
          "type": {
            "punctuated": {
              "element": {
                "item": "LifetimeDef"
              },
              "punct": "Comma"
            }
          }
        },
        {
          "ident": "gt_token",
          "type": {
            "token": "Gt"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ConstParam",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "const_token",
          "type": {
            "token": "Const"
          }
        },
        {
          "ident": "ident",
          "type": {
            "item": "Ident"
          }
        },
        {
          "ident": "colon_token",
          "type": {
            "token": "Colon"
          }
        },
        {
          "ident": "ty",
          "type": {
            "item": "Type"
          }
        },
        {
          "ident": "eq_token",
          "type": {
            "option": {
              "token": "Eq"
            }
          }
        },
        {
          "ident": "default",
          "type": {
            "option": {
              "item": "Expr"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "Constraint",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "ident",
          "type": {
            "item": "Ident"
          }
        },
        {
          "ident": "colon_token",
          "type": {
            "token": "Colon"
          }
        },
        {
          "ident": "bounds",
          "type": {
            "punctuated": {
              "element": {
                "item": "TypeParamBound"
              },
              "punct": "Add"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "enum",
      "ident": "Data",
      "features": {
        "any": [
          "derive"
        ]
      },
      "variants": [
        {
          "ident": "Struct",
          "fields": [
            {
              "item": "DataStruct"
            }
          ]
        },
        {
          "ident": "Enum",
          "fields": [
            {
              "item": "DataEnum"
            }
          ]
        },
        {
          "ident": "Union",
          "fields": [
            {
              "item": "DataUnion"
            }
          ]
        }
      ]
    },
    {
      "node": "struct",
      "ident": "DataEnum",
      "features": {
        "any": [
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "enum_token",
          "type": {
            "token": "Enum"
          }
        },
        {
          "ident": "brace_token",
          "type": {
            "group": "Brace"
          }
        },
        {
          "ident": "variants",
          "type": {
            "punctuated": {
              "element": {
                "item": "Variant"
              },
              "punct": "Comma"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "DataStruct",
      "features": {
        "any": [
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "struct_token",
          "type": {
            "token": "Struct"
          }
        },
        {
          "ident": "fields",
          "type": {
            "item": "Fields"
          }
        },
        {
          "ident": "semi_token",
          "type": {
            "option": {
              "token": "Semi"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "DataUnion",
      "features": {
        "any": [
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "union_token",
          "type": {
            "token": "Union"
          }
        },
        {
          "ident": "fields",
          "type": {
            "item": "FieldsNamed"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "DeriveInput",
      "features": {
        "any": [
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "vis",
          "type": {
            "item": "Visibility"
          }
        },
        {
          "ident": "ident",
          "type": {
            "item": "Ident"
          }
        },
        {
          "ident": "generics",
          "type": {
            "item": "Generics"
          }
        },
        {
          "ident": "data",
          "type": {
            "item": "Data"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "enum",
      "ident": "Expr",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "variants": [
        {
          "ident": "Box",
          "fields": [
            {
              "item": "ExprBox"
            }
          ]
        },
        {
          "ident": "InPlace",
          "fields": [
            {
              "item": "ExprInPlace"
            }
          ]
        },
        {
          "ident": "Array",
          "fields": [
            {
              "item": "ExprArray"
            }
          ]
        },
        {
          "ident": "Call",
          "fields": [
            {
              "item": "ExprCall"
            }
          ]
        },
        {
          "ident": "MethodCall",
          "fields": [
            {
              "item": "ExprMethodCall"
            }
          ]
        },
        {
          "ident": "Tuple",
          "fields": [
            {
              "item": "ExprTuple"
            }
          ]
        },
        {
          "ident": "Binary",
          "fields": [
            {
              "item": "ExprBinary"
            }
          ]
        },
        {
          "ident": "Unary",
          "fields": [
            {
              "item": "ExprUnary"
            }
          ]
        },
        {
          "ident": "Lit",
          "fields": [
            {
              "item": "ExprLit"
            }
          ]
        },
        {
          "ident": "Cast",
          "fields": [
            {
              "item": "ExprCast"
            }
          ]
        },
        {
          "ident": "Type",
          "fields": [
            {
              "item": "ExprType"
            }
          ]
        },
        {
          "ident": "Let",
          "fields": [
            {
              "item": "ExprLet"
            }
          ]
        },
        {
          "ident": "If",
          "fields": [
            {
              "item": "ExprIf"
            }
          ]
        },
        {
          "ident": "While",
          "fields": [
            {
              "item": "ExprWhile"
            }
          ]
        },
        {
          "ident": "ForLoop",
          "fields": [
            {
              "item": "ExprForLoop"
            }
          ]
        },
        {
          "ident": "Loop",
          "fields": [
            {
              "item": "ExprLoop"
            }
          ]
        },
        {
          "ident": "Match",
          "fields": [
            {
              "item": "ExprMatch"
            }
          ]
        },
        {
          "ident": "Closure",
          "fields": [
            {
              "item": "ExprClosure"
            }
          ]
        },
        {
          "ident": "Unsafe",
          "fields": [
            {
              "item": "ExprUnsafe"
            }
          ]
        },
        {
          "ident": "Block",
          "fields": [
            {
              "item": "ExprBlock"
            }
          ]
        },
        {
          "ident": "Assign",
          "fields": [
            {
              "item": "ExprAssign"
            }
          ]
        },
        {
          "ident": "AssignOp",
          "fields": [
            {
              "item": "ExprAssignOp"
            }
          ]
        },
        {
          "ident": "Field",
          "fields": [
            {
              "item": "ExprField"
            }
          ]
        },
        {
          "ident": "Index",
          "fields": [
            {
              "item": "ExprIndex"
            }
          ]
        },
        {
          "ident": "Range",
          "fields": [
            {
              "item": "ExprRange"
            }
          ]
        },
        {
          "ident": "Path",
          "fields": [
            {
              "item": "ExprPath"
            }
          ]
        },
        {
          "ident": "Reference",
          "fields": [
            {
              "item": "ExprReference"
            }
          ]
        },
        {
          "ident": "Break",
          "fields": [
            {
              "item": "ExprBreak"
            }
          ]
        },
        {
          "ident": "Continue",
          "fields": [
            {
              "item": "ExprContinue"
            }
          ]
        },
        {
          "ident": "Return",
          "fields": [
            {
              "item": "ExprReturn"
            }
          ]
        },
        {
          "ident": "Macro",
          "fields": [
            {
              "item": "ExprMacro"
            }
          ]
        },
        {
          "ident": "Struct",
          "fields": [
            {
              "item": "ExprStruct"
            }
          ]
        },
        {
          "ident": "Repeat",
          "fields": [
            {
              "item": "ExprRepeat"
            }
          ]
        },
        {
          "ident": "Paren",
          "fields": [
            {
              "item": "ExprParen"
            }
          ]
        },
        {
          "ident": "Group",
          "fields": [
            {
              "item": "ExprGroup"
            }
          ]
        },
        {
          "ident": "Try",
          "fields": [
            {
              "item": "ExprTry"
            }
          ]
        },
        {
          "ident": "Async",
          "fields": [
            {
              "item": "ExprAsync"
            }
          ]
        },
        {
          "ident": "TryBlock",
          "fields": [
            {
              "item": "ExprTryBlock"
            }
          ]
        },
        {
          "ident": "Yield",
          "fields": [
            {
              "item": "ExprYield"
            }
          ]
        },
        {
          "ident": "Verbatim",
          "fields": [
            {
              "item": "ExprVerbatim"
            }
          ]
        }
      ]
    },
    {
      "node": "struct",
      "ident": "ExprArray",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "bracket_token",
          "type": {
            "group": "Bracket"
          }
        },
        {
          "ident": "elems",
          "type": {
            "punctuated": {
              "element": {
                "item": "Expr"
              },
              "punct": "Comma"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprAssign",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "left",
          "type": {
            "box": {
              "item": "Expr"
            }
          }
        },
        {
          "ident": "eq_token",
          "type": {
            "token": "Eq"
          }
        },
        {
          "ident": "right",
          "type": {
            "box": {
              "item": "Expr"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprAssignOp",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "left",
          "type": {
            "box": {
              "item": "Expr"
            }
          }
        },
        {
          "ident": "op",
          "type": {
            "item": "BinOp"
          }
        },
        {
          "ident": "right",
          "type": {
            "box": {
              "item": "Expr"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprAsync",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "async_token",
          "type": {
            "token": "Async"
          }
        },
        {
          "ident": "capture",
          "type": {
            "option": {
              "token": "Move"
            }
          }
        },
        {
          "ident": "block",
          "type": {
            "item": "Block"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprBinary",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "left",
          "type": {
            "box": {
              "item": "Expr"
            }
          }
        },
        {
          "ident": "op",
          "type": {
            "item": "BinOp"
          }
        },
        {
          "ident": "right",
          "type": {
            "box": {
              "item": "Expr"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprBlock",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "label",
          "type": {
            "option": {
              "item": "Label"
            }
          }
        },
        {
          "ident": "block",
          "type": {
            "item": "Block"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprBox",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "box_token",
          "type": {
            "token": "Box"
          }
        },
        {
          "ident": "expr",
          "type": {
            "box": {
              "item": "Expr"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprBreak",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "break_token",
          "type": {
            "token": "Break"
          }
        },
        {
          "ident": "label",
          "type": {
            "option": {
              "item": "Lifetime"
            }
          }
        },
        {
          "ident": "expr",
          "type": {
            "option": {
              "box": {
                "item": "Expr"
              }
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprCall",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "func",
          "type": {
            "box": {
              "item": "Expr"
            }
          }
        },
        {
          "ident": "paren_token",
          "type": {
            "group": "Paren"
          }
        },
        {
          "ident": "args",
          "type": {
            "punctuated": {
              "element": {
                "item": "Expr"
              },
              "punct": "Comma"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprCast",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "expr",
          "type": {
            "box": {
              "item": "Expr"
            }
          }
        },
        {
          "ident": "as_token",
          "type": {
            "token": "As"
          }
        },
        {
          "ident": "ty",
          "type": {
            "box": {
              "item": "Type"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprClosure",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "asyncness",
          "type": {
            "option": {
              "token": "Async"
            }
          }
        },
        {
          "ident": "movability",
          "type": {
            "option": {
              "token": "Static"
            }
          }
        },
        {
          "ident": "capture",
          "type": {
            "option": {
              "token": "Move"
            }
          }
        },
        {
          "ident": "or1_token",
          "type": {
            "token": "Or"
          }
        },
        {
          "ident": "inputs",
          "type": {
            "punctuated": {
              "element": {
                "item": "FnArg"
              },
              "punct": "Comma"
            }
          }
        },
        {
          "ident": "or2_token",
          "type": {
            "token": "Or"
          }
        },
        {
          "ident": "output",
          "type": {
            "item": "ReturnType"
          }
        },
        {
          "ident": "body",
          "type": {
            "box": {
              "item": "Expr"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprContinue",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "continue_token",
          "type": {
            "token": "Continue"
          }
        },
        {
          "ident": "label",
          "type": {
            "option": {
              "item": "Lifetime"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprField",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "base",
          "type": {
            "box": {
              "item": "Expr"
            }
          }
        },
        {
          "ident": "dot_token",
          "type": {
            "token": "Dot"
          }
        },
        {
          "ident": "member",
          "type": {
            "item": "Member"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprForLoop",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "label",
          "type": {
            "option": {
              "item": "Label"
            }
          }
        },
        {
          "ident": "for_token",
          "type": {
            "token": "For"
          }
        },
        {
          "ident": "pat",
          "type": {
            "box": {
              "item": "Pat"
            }
          }
        },
        {
          "ident": "in_token",
          "type": {
            "token": "In"
          }
        },
        {
          "ident": "expr",
          "type": {
            "box": {
              "item": "Expr"
            }
          }
        },
        {
          "ident": "body",
          "type": {
            "item": "Block"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprGroup",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "group_token",
          "type": {
            "group": "Group"
          }
        },
        {
          "ident": "expr",
          "type": {
            "box": {
              "item": "Expr"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprIf",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "if_token",
          "type": {
            "token": "If"
          }
        },
        {
          "ident": "cond",
          "type": {
            "box": {
              "item": "Expr"
            }
          }
        },
        {
          "ident": "then_branch",
          "type": {
            "item": "Block"
          }
        },
        {
          "ident": "else_branch",
          "type": {
            "option": {
              "tuple": [
                {
                  "token": "Else"
                },
                {
                  "box": {
                    "item": "Expr"
                  }
                }
              ]
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprInPlace",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "place",
          "type": {
            "box": {
              "item": "Expr"
            }
          }
        },
        {
          "ident": "arrow_token",
          "type": {
            "token": "LArrow"
          }
        },
        {
          "ident": "value",
          "type": {
            "box": {
              "item": "Expr"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprIndex",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "expr",
          "type": {
            "box": {
              "item": "Expr"
            }
          }
        },
        {
          "ident": "bracket_token",
          "type": {
            "group": "Bracket"
          }
        },
        {
          "ident": "index",
          "type": {
            "box": {
              "item": "Expr"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprLet",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "let_token",
          "type": {
            "token": "Let"
          }
        },
        {
          "ident": "pats",
          "type": {
            "punctuated": {
              "element": {
                "item": "Pat"
              },
              "punct": "Or"
            }
          }
        },
        {
          "ident": "eq_token",
          "type": {
            "token": "Eq"
          }
        },
        {
          "ident": "expr",
          "type": {
            "box": {
              "item": "Expr"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprLit",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "lit",
          "type": {
            "item": "Lit"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprLoop",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "label",
          "type": {
            "option": {
              "item": "Label"
            }
          }
        },
        {
          "ident": "loop_token",
          "type": {
            "token": "Loop"
          }
        },
        {
          "ident": "body",
          "type": {
            "item": "Block"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprMacro",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "mac",
          "type": {
            "item": "Macro"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprMatch",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "match_token",
          "type": {
            "token": "Match"
          }
        },
        {
          "ident": "expr",
          "type": {
            "box": {
              "item": "Expr"
            }
          }
        },
        {
          "ident": "brace_token",
          "type": {
            "group": "Brace"
          }
        },
        {
          "ident": "arms",
          "type": {
            "vec": {
              "item": "Arm"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprMethodCall",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "receiver",
          "type": {
            "box": {
              "item": "Expr"
            }
          }
        },
        {
          "ident": "dot_token",
          "type": {
            "token": "Dot"
          }
        },
        {
          "ident": "method",
          "type": {
            "item": "Ident"
          }
        },
        {
          "ident": "turbofish",
          "type": {
            "option": {
              "item": "MethodTurbofish"
            }
          }
        },
        {
          "ident": "paren_token",
          "type": {
            "group": "Paren"
          }
        },
        {
          "ident": "args",
          "type": {
            "punctuated": {
              "element": {
                "item": "Expr"
              },
              "punct": "Comma"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprParen",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "paren_token",
          "type": {
            "group": "Paren"
          }
        },
        {
          "ident": "expr",
          "type": {
            "box": {
              "item": "Expr"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprPath",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "qself",
          "type": {
            "option": {
              "item": "QSelf"
            }
          }
        },
        {
          "ident": "path",
          "type": {
            "item": "Path"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprRange",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "from",
          "type": {
            "option": {
              "box": {
                "item": "Expr"
              }
            }
          }
        },
        {
          "ident": "limits",
          "type": {
            "item": "RangeLimits"
          }
        },
        {
          "ident": "to",
          "type": {
            "option": {
              "box": {
                "item": "Expr"
              }
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprReference",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "and_token",
          "type": {
            "token": "And"
          }
        },
        {
          "ident": "mutability",
          "type": {
            "option": {
              "token": "Mut"
            }
          }
        },
        {
          "ident": "expr",
          "type": {
            "box": {
              "item": "Expr"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprRepeat",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "bracket_token",
          "type": {
            "group": "Bracket"
          }
        },
        {
          "ident": "expr",
          "type": {
            "box": {
              "item": "Expr"
            }
          }
        },
        {
          "ident": "semi_token",
          "type": {
            "token": "Semi"
          }
        },
        {
          "ident": "len",
          "type": {
            "box": {
              "item": "Expr"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprReturn",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "return_token",
          "type": {
            "token": "Return"
          }
        },
        {
          "ident": "expr",
          "type": {
            "option": {
              "box": {
                "item": "Expr"
              }
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprStruct",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "path",
          "type": {
            "item": "Path"
          }
        },
        {
          "ident": "brace_token",
          "type": {
            "group": "Brace"
          }
        },
        {
          "ident": "fields",
          "type": {
            "punctuated": {
              "element": {
                "item": "FieldValue"
              },
              "punct": "Comma"
            }
          }
        },
        {
          "ident": "dot2_token",
          "type": {
            "option": {
              "token": "Dot2"
            }
          }
        },
        {
          "ident": "rest",
          "type": {
            "option": {
              "box": {
                "item": "Expr"
              }
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprTry",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "expr",
          "type": {
            "box": {
              "item": "Expr"
            }
          }
        },
        {
          "ident": "question_token",
          "type": {
            "token": "Question"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprTryBlock",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "try_token",
          "type": {
            "token": "Try"
          }
        },
        {
          "ident": "block",
          "type": {
            "item": "Block"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprTuple",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "paren_token",
          "type": {
            "group": "Paren"
          }
        },
        {
          "ident": "elems",
          "type": {
            "punctuated": {
              "element": {
                "item": "Expr"
              },
              "punct": "Comma"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprType",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "expr",
          "type": {
            "box": {
              "item": "Expr"
            }
          }
        },
        {
          "ident": "colon_token",
          "type": {
            "token": "Colon"
          }
        },
        {
          "ident": "ty",
          "type": {
            "box": {
              "item": "Type"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprUnary",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "op",
          "type": {
            "item": "UnOp"
          }
        },
        {
          "ident": "expr",
          "type": {
            "box": {
              "item": "Expr"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprUnsafe",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "unsafe_token",
          "type": {
            "token": "Unsafe"
          }
        },
        {
          "ident": "block",
          "type": {
            "item": "Block"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprVerbatim",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "tts",
          "type": {
            "ext": "TokenStream"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprWhile",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "label",
          "type": {
            "option": {
              "item": "Label"
            }
          }
        },
        {
          "ident": "while_token",
          "type": {
            "token": "While"
          }
        },
        {
          "ident": "cond",
          "type": {
            "box": {
              "item": "Expr"
            }
          }
        },
        {
          "ident": "body",
          "type": {
            "item": "Block"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ExprYield",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "yield_token",
          "type": {
            "token": "Yield"
          }
        },
        {
          "ident": "expr",
          "type": {
            "option": {
              "box": {
                "item": "Expr"
              }
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "Field",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "vis",
          "type": {
            "item": "Visibility"
          }
        },
        {
          "ident": "ident",
          "type": {
            "option": {
              "item": "Ident"
            }
          }
        },
        {
          "ident": "colon_token",
          "type": {
            "option": {
              "token": "Colon"
            }
          }
        },
        {
          "ident": "ty",
          "type": {
            "item": "Type"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "FieldPat",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "member",
          "type": {
            "item": "Member"
          }
        },
        {
          "ident": "colon_token",
          "type": {
            "option": {
              "token": "Colon"
            }
          }
        },
        {
          "ident": "pat",
          "type": {
            "box": {
              "item": "Pat"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "FieldValue",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "member",
          "type": {
            "item": "Member"
          }
        },
        {
          "ident": "colon_token",
          "type": {
            "option": {
              "token": "Colon"
            }
          }
        },
        {
          "ident": "expr",
          "type": {
            "item": "Expr"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "enum",
      "ident": "Fields",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "variants": [
        {
          "ident": "Named",
          "fields": [
            {
              "item": "FieldsNamed"
            }
          ]
        },
        {
          "ident": "Unnamed",
          "fields": [
            {
              "item": "FieldsUnnamed"
            }
          ]
        },
        {
          "ident": "Unit",
          "fields": []
        }
      ]
    },
    {
      "node": "struct",
      "ident": "FieldsNamed",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "brace_token",
          "type": {
            "group": "Brace"
          }
        },
        {
          "ident": "named",
          "type": {
            "punctuated": {
              "element": {
                "item": "Field"
              },
              "punct": "Comma"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "FieldsUnnamed",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "paren_token",
          "type": {
            "group": "Paren"
          }
        },
        {
          "ident": "unnamed",
          "type": {
            "punctuated": {
              "element": {
                "item": "Field"
              },
              "punct": "Comma"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "File",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "shebang",
          "type": {
            "option": {
              "std": "String"
            }
          }
        },
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "items",
          "type": {
            "vec": {
              "item": "Item"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "enum",
      "ident": "FnArg",
      "features": {
        "any": [
          "full"
        ]
      },
      "variants": [
        {
          "ident": "SelfRef",
          "fields": [
            {
              "item": "ArgSelfRef"
            }
          ]
        },
        {
          "ident": "SelfValue",
          "fields": [
            {
              "item": "ArgSelf"
            }
          ]
        },
        {
          "ident": "Captured",
          "fields": [
            {
              "item": "ArgCaptured"
            }
          ]
        },
        {
          "ident": "Inferred",
          "fields": [
            {
              "item": "Pat"
            }
          ]
        },
        {
          "ident": "Ignored",
          "fields": [
            {
              "item": "Type"
            }
          ]
        }
      ]
    },
    {
      "node": "struct",
      "ident": "FnDecl",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "fn_token",
          "type": {
            "token": "Fn"
          }
        },
        {
          "ident": "generics",
          "type": {
            "item": "Generics"
          }
        },
        {
          "ident": "paren_token",
          "type": {
            "group": "Paren"
          }
        },
        {
          "ident": "inputs",
          "type": {
            "punctuated": {
              "element": {
                "item": "FnArg"
              },
              "punct": "Comma"
            }
          }
        },
        {
          "ident": "variadic",
          "type": {
            "option": {
              "token": "Dot3"
            }
          }
        },
        {
          "ident": "output",
          "type": {
            "item": "ReturnType"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "enum",
      "ident": "ForeignItem",
      "features": {
        "any": [
          "full"
        ]
      },
      "variants": [
        {
          "ident": "Fn",
          "fields": [
            {
              "item": "ForeignItemFn"
            }
          ]
        },
        {
          "ident": "Static",
          "fields": [
            {
              "item": "ForeignItemStatic"
            }
          ]
        },
        {
          "ident": "Type",
          "fields": [
            {
              "item": "ForeignItemType"
            }
          ]
        },
        {
          "ident": "Macro",
          "fields": [
            {
              "item": "ForeignItemMacro"
            }
          ]
        },
        {
          "ident": "Verbatim",
          "fields": [
            {
              "item": "ForeignItemVerbatim"
            }
          ]
        }
      ]
    },
    {
      "node": "struct",
      "ident": "ForeignItemFn",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "vis",
          "type": {
            "item": "Visibility"
          }
        },
        {
          "ident": "ident",
          "type": {
            "item": "Ident"
          }
        },
        {
          "ident": "decl",
          "type": {
            "box": {
              "item": "FnDecl"
            }
          }
        },
        {
          "ident": "semi_token",
          "type": {
            "token": "Semi"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ForeignItemMacro",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "mac",
          "type": {
            "item": "Macro"
          }
        },
        {
          "ident": "semi_token",
          "type": {
            "option": {
              "token": "Semi"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ForeignItemStatic",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "vis",
          "type": {
            "item": "Visibility"
          }
        },
        {
          "ident": "static_token",
          "type": {
            "token": "Static"
          }
        },
        {
          "ident": "mutability",
          "type": {
            "option": {
              "token": "Mut"
            }
          }
        },
        {
          "ident": "ident",
          "type": {
            "item": "Ident"
          }
        },
        {
          "ident": "colon_token",
          "type": {
            "token": "Colon"
          }
        },
        {
          "ident": "ty",
          "type": {
            "box": {
              "item": "Type"
            }
          }
        },
        {
          "ident": "semi_token",
          "type": {
            "token": "Semi"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ForeignItemType",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "vis",
          "type": {
            "item": "Visibility"
          }
        },
        {
          "ident": "type_token",
          "type": {
            "token": "Type"
          }
        },
        {
          "ident": "ident",
          "type": {
            "item": "Ident"
          }
        },
        {
          "ident": "semi_token",
          "type": {
            "token": "Semi"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ForeignItemVerbatim",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "tts",
          "type": {
            "ext": "TokenStream"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "enum",
      "ident": "GenericArgument",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "variants": [
        {
          "ident": "Lifetime",
          "fields": [
            {
              "item": "Lifetime"
            }
          ]
        },
        {
          "ident": "Type",
          "fields": [
            {
              "item": "Type"
            }
          ]
        },
        {
          "ident": "Binding",
          "fields": [
            {
              "item": "Binding"
            }
          ]
        },
        {
          "ident": "Constraint",
          "fields": [
            {
              "item": "Constraint"
            }
          ]
        },
        {
          "ident": "Const",
          "fields": [
            {
              "item": "Expr"
            }
          ]
        }
      ]
    },
    {
      "node": "enum",
      "ident": "GenericMethodArgument",
      "features": {
        "any": [
          "full"
        ]
      },
      "variants": [
        {
          "ident": "Type",
          "fields": [
            {
              "item": "Type"
            }
          ]
        },
        {
          "ident": "Const",
          "fields": [
            {
              "item": "Expr"
            }
          ]
        }
      ]
    },
    {
      "node": "enum",
      "ident": "GenericParam",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "variants": [
        {
          "ident": "Type",
          "fields": [
            {
              "item": "TypeParam"
            }
          ]
        },
        {
          "ident": "Lifetime",
          "fields": [
            {
              "item": "LifetimeDef"
            }
          ]
        },
        {
          "ident": "Const",
          "fields": [
            {
              "item": "ConstParam"
            }
          ]
        }
      ]
    },
    {
      "node": "struct",
      "ident": "Generics",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "lt_token",
          "type": {
            "option": {
              "token": "Lt"
            }
          }
        },
        {
          "ident": "params",
          "type": {
            "punctuated": {
              "element": {
                "item": "GenericParam"
              },
              "punct": "Comma"
            }
          }
        },
        {
          "ident": "gt_token",
          "type": {
            "option": {
              "token": "Gt"
            }
          }
        },
        {
          "ident": "where_clause",
          "type": {
            "option": {
              "item": "WhereClause"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "Ident",
      "features": {
        "any": []
      },
      "fields": [],
      "all_fields_pub": true
    },
    {
      "node": "enum",
      "ident": "ImplItem",
      "features": {
        "any": [
          "full"
        ]
      },
      "variants": [
        {
          "ident": "Const",
          "fields": [
            {
              "item": "ImplItemConst"
            }
          ]
        },
        {
          "ident": "Method",
          "fields": [
            {
              "item": "ImplItemMethod"
            }
          ]
        },
        {
          "ident": "Type",
          "fields": [
            {
              "item": "ImplItemType"
            }
          ]
        },
        {
          "ident": "Existential",
          "fields": [
            {
              "item": "ImplItemExistential"
            }
          ]
        },
        {
          "ident": "Macro",
          "fields": [
            {
              "item": "ImplItemMacro"
            }
          ]
        },
        {
          "ident": "Verbatim",
          "fields": [
            {
              "item": "ImplItemVerbatim"
            }
          ]
        }
      ]
    },
    {
      "node": "struct",
      "ident": "ImplItemConst",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "vis",
          "type": {
            "item": "Visibility"
          }
        },
        {
          "ident": "defaultness",
          "type": {
            "option": {
              "token": "Default"
            }
          }
        },
        {
          "ident": "const_token",
          "type": {
            "token": "Const"
          }
        },
        {
          "ident": "ident",
          "type": {
            "item": "Ident"
          }
        },
        {
          "ident": "colon_token",
          "type": {
            "token": "Colon"
          }
        },
        {
          "ident": "ty",
          "type": {
            "item": "Type"
          }
        },
        {
          "ident": "eq_token",
          "type": {
            "token": "Eq"
          }
        },
        {
          "ident": "expr",
          "type": {
            "item": "Expr"
          }
        },
        {
          "ident": "semi_token",
          "type": {
            "token": "Semi"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ImplItemExistential",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "existential_token",
          "type": {
            "token": "Existential"
          }
        },
        {
          "ident": "type_token",
          "type": {
            "token": "Type"
          }
        },
        {
          "ident": "ident",
          "type": {
            "item": "Ident"
          }
        },
        {
          "ident": "generics",
          "type": {
            "item": "Generics"
          }
        },
        {
          "ident": "colon_token",
          "type": {
            "option": {
              "token": "Colon"
            }
          }
        },
        {
          "ident": "bounds",
          "type": {
            "punctuated": {
              "element": {
                "item": "TypeParamBound"
              },
              "punct": "Add"
            }
          }
        },
        {
          "ident": "semi_token",
          "type": {
            "token": "Semi"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ImplItemMacro",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "mac",
          "type": {
            "item": "Macro"
          }
        },
        {
          "ident": "semi_token",
          "type": {
            "option": {
              "token": "Semi"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ImplItemMethod",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "vis",
          "type": {
            "item": "Visibility"
          }
        },
        {
          "ident": "defaultness",
          "type": {
            "option": {
              "token": "Default"
            }
          }
        },
        {
          "ident": "sig",
          "type": {
            "item": "MethodSig"
          }
        },
        {
          "ident": "block",
          "type": {
            "item": "Block"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ImplItemType",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "vis",
          "type": {
            "item": "Visibility"
          }
        },
        {
          "ident": "defaultness",
          "type": {
            "option": {
              "token": "Default"
            }
          }
        },
        {
          "ident": "type_token",
          "type": {
            "token": "Type"
          }
        },
        {
          "ident": "ident",
          "type": {
            "item": "Ident"
          }
        },
        {
          "ident": "generics",
          "type": {
            "item": "Generics"
          }
        },
        {
          "ident": "eq_token",
          "type": {
            "token": "Eq"
          }
        },
        {
          "ident": "ty",
          "type": {
            "item": "Type"
          }
        },
        {
          "ident": "semi_token",
          "type": {
            "token": "Semi"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ImplItemVerbatim",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "tts",
          "type": {
            "ext": "TokenStream"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "Index",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "index",
          "type": {
            "std": "u32"
          }
        },
        {
          "ident": "span",
          "type": {
            "item": "Span"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "enum",
      "ident": "Item",
      "features": {
        "any": [
          "full"
        ]
      },
      "variants": [
        {
          "ident": "ExternCrate",
          "fields": [
            {
              "item": "ItemExternCrate"
            }
          ]
        },
        {
          "ident": "Use",
          "fields": [
            {
              "item": "ItemUse"
            }
          ]
        },
        {
          "ident": "Static",
          "fields": [
            {
              "item": "ItemStatic"
            }
          ]
        },
        {
          "ident": "Const",
          "fields": [
            {
              "item": "ItemConst"
            }
          ]
        },
        {
          "ident": "Fn",
          "fields": [
            {
              "item": "ItemFn"
            }
          ]
        },
        {
          "ident": "Mod",
          "fields": [
            {
              "item": "ItemMod"
            }
          ]
        },
        {
          "ident": "ForeignMod",
          "fields": [
            {
              "item": "ItemForeignMod"
            }
          ]
        },
        {
          "ident": "Type",
          "fields": [
            {
              "item": "ItemType"
            }
          ]
        },
        {
          "ident": "Existential",
          "fields": [
            {
              "item": "ItemExistential"
            }
          ]
        },
        {
          "ident": "Struct",
          "fields": [
            {
              "item": "ItemStruct"
            }
          ]
        },
        {
          "ident": "Enum",
          "fields": [
            {
              "item": "ItemEnum"
            }
          ]
        },
        {
          "ident": "Union",
          "fields": [
            {
              "item": "ItemUnion"
            }
          ]
        },
        {
          "ident": "Trait",
          "fields": [
            {
              "item": "ItemTrait"
            }
          ]
        },
        {
          "ident": "TraitAlias",
          "fields": [
            {
              "item": "ItemTraitAlias"
            }
          ]
        },
        {
          "ident": "Impl",
          "fields": [
            {
              "item": "ItemImpl"
            }
          ]
        },
        {
          "ident": "Macro",
          "fields": [
            {
              "item": "ItemMacro"
            }
          ]
        },
        {
          "ident": "Macro2",
          "fields": [
            {
              "item": "ItemMacro2"
            }
          ]
        },
        {
          "ident": "Verbatim",
          "fields": [
            {
              "item": "ItemVerbatim"
            }
          ]
        }
      ]
    },
    {
      "node": "struct",
      "ident": "ItemConst",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "vis",
          "type": {
            "item": "Visibility"
          }
        },
        {
          "ident": "const_token",
          "type": {
            "token": "Const"
          }
        },
        {
          "ident": "ident",
          "type": {
            "item": "Ident"
          }
        },
        {
          "ident": "colon_token",
          "type": {
            "token": "Colon"
          }
        },
        {
          "ident": "ty",
          "type": {
            "box": {
              "item": "Type"
            }
          }
        },
        {
          "ident": "eq_token",
          "type": {
            "token": "Eq"
          }
        },
        {
          "ident": "expr",
          "type": {
            "box": {
              "item": "Expr"
            }
          }
        },
        {
          "ident": "semi_token",
          "type": {
            "token": "Semi"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ItemEnum",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "vis",
          "type": {
            "item": "Visibility"
          }
        },
        {
          "ident": "enum_token",
          "type": {
            "token": "Enum"
          }
        },
        {
          "ident": "ident",
          "type": {
            "item": "Ident"
          }
        },
        {
          "ident": "generics",
          "type": {
            "item": "Generics"
          }
        },
        {
          "ident": "brace_token",
          "type": {
            "group": "Brace"
          }
        },
        {
          "ident": "variants",
          "type": {
            "punctuated": {
              "element": {
                "item": "Variant"
              },
              "punct": "Comma"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ItemExistential",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "vis",
          "type": {
            "item": "Visibility"
          }
        },
        {
          "ident": "existential_token",
          "type": {
            "token": "Existential"
          }
        },
        {
          "ident": "type_token",
          "type": {
            "token": "Type"
          }
        },
        {
          "ident": "ident",
          "type": {
            "item": "Ident"
          }
        },
        {
          "ident": "generics",
          "type": {
            "item": "Generics"
          }
        },
        {
          "ident": "colon_token",
          "type": {
            "option": {
              "token": "Colon"
            }
          }
        },
        {
          "ident": "bounds",
          "type": {
            "punctuated": {
              "element": {
                "item": "TypeParamBound"
              },
              "punct": "Add"
            }
          }
        },
        {
          "ident": "semi_token",
          "type": {
            "token": "Semi"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ItemExternCrate",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "vis",
          "type": {
            "item": "Visibility"
          }
        },
        {
          "ident": "extern_token",
          "type": {
            "token": "Extern"
          }
        },
        {
          "ident": "crate_token",
          "type": {
            "token": "Crate"
          }
        },
        {
          "ident": "ident",
          "type": {
            "item": "Ident"
          }
        },
        {
          "ident": "rename",
          "type": {
            "option": {
              "tuple": [
                {
                  "token": "As"
                },
                {
                  "item": "Ident"
                }
              ]
            }
          }
        },
        {
          "ident": "semi_token",
          "type": {
            "token": "Semi"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ItemFn",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "vis",
          "type": {
            "item": "Visibility"
          }
        },
        {
          "ident": "constness",
          "type": {
            "option": {
              "token": "Const"
            }
          }
        },
        {
          "ident": "unsafety",
          "type": {
            "option": {
              "token": "Unsafe"
            }
          }
        },
        {
          "ident": "asyncness",
          "type": {
            "option": {
              "token": "Async"
            }
          }
        },
        {
          "ident": "abi",
          "type": {
            "option": {
              "item": "Abi"
            }
          }
        },
        {
          "ident": "ident",
          "type": {
            "item": "Ident"
          }
        },
        {
          "ident": "decl",
          "type": {
            "box": {
              "item": "FnDecl"
            }
          }
        },
        {
          "ident": "block",
          "type": {
            "box": {
              "item": "Block"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ItemForeignMod",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "abi",
          "type": {
            "item": "Abi"
          }
        },
        {
          "ident": "brace_token",
          "type": {
            "group": "Brace"
          }
        },
        {
          "ident": "items",
          "type": {
            "vec": {
              "item": "ForeignItem"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ItemImpl",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "defaultness",
          "type": {
            "option": {
              "token": "Default"
            }
          }
        },
        {
          "ident": "unsafety",
          "type": {
            "option": {
              "token": "Unsafe"
            }
          }
        },
        {
          "ident": "impl_token",
          "type": {
            "token": "Impl"
          }
        },
        {
          "ident": "generics",
          "type": {
            "item": "Generics"
          }
        },
        {
          "ident": "trait_",
          "type": {
            "option": {
              "tuple": [
                {
                  "option": {
                    "token": "Bang"
                  }
                },
                {
                  "item": "Path"
                },
                {
                  "token": "For"
                }
              ]
            }
          }
        },
        {
          "ident": "self_ty",
          "type": {
            "box": {
              "item": "Type"
            }
          }
        },
        {
          "ident": "brace_token",
          "type": {
            "group": "Brace"
          }
        },
        {
          "ident": "items",
          "type": {
            "vec": {
              "item": "ImplItem"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ItemMacro",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "ident",
          "type": {
            "option": {
              "item": "Ident"
            }
          }
        },
        {
          "ident": "mac",
          "type": {
            "item": "Macro"
          }
        },
        {
          "ident": "semi_token",
          "type": {
            "option": {
              "token": "Semi"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ItemMacro2",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "vis",
          "type": {
            "item": "Visibility"
          }
        },
        {
          "ident": "macro_token",
          "type": {
            "token": "Macro"
          }
        },
        {
          "ident": "ident",
          "type": {
            "item": "Ident"
          }
        },
        {
          "ident": "paren_token",
          "type": {
            "group": "Paren"
          }
        },
        {
          "ident": "args",
          "type": {
            "ext": "TokenStream"
          }
        },
        {
          "ident": "brace_token",
          "type": {
            "group": "Brace"
          }
        },
        {
          "ident": "body",
          "type": {
            "ext": "TokenStream"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ItemMod",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "vis",
          "type": {
            "item": "Visibility"
          }
        },
        {
          "ident": "mod_token",
          "type": {
            "token": "Mod"
          }
        },
        {
          "ident": "ident",
          "type": {
            "item": "Ident"
          }
        },
        {
          "ident": "content",
          "type": {
            "option": {
              "tuple": [
                {
                  "group": "Brace"
                },
                {
                  "vec": {
                    "item": "Item"
                  }
                }
              ]
            }
          }
        },
        {
          "ident": "semi",
          "type": {
            "option": {
              "token": "Semi"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ItemStatic",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "vis",
          "type": {
            "item": "Visibility"
          }
        },
        {
          "ident": "static_token",
          "type": {
            "token": "Static"
          }
        },
        {
          "ident": "mutability",
          "type": {
            "option": {
              "token": "Mut"
            }
          }
        },
        {
          "ident": "ident",
          "type": {
            "item": "Ident"
          }
        },
        {
          "ident": "colon_token",
          "type": {
            "token": "Colon"
          }
        },
        {
          "ident": "ty",
          "type": {
            "box": {
              "item": "Type"
            }
          }
        },
        {
          "ident": "eq_token",
          "type": {
            "token": "Eq"
          }
        },
        {
          "ident": "expr",
          "type": {
            "box": {
              "item": "Expr"
            }
          }
        },
        {
          "ident": "semi_token",
          "type": {
            "token": "Semi"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ItemStruct",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "vis",
          "type": {
            "item": "Visibility"
          }
        },
        {
          "ident": "struct_token",
          "type": {
            "token": "Struct"
          }
        },
        {
          "ident": "ident",
          "type": {
            "item": "Ident"
          }
        },
        {
          "ident": "generics",
          "type": {
            "item": "Generics"
          }
        },
        {
          "ident": "fields",
          "type": {
            "item": "Fields"
          }
        },
        {
          "ident": "semi_token",
          "type": {
            "option": {
              "token": "Semi"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ItemTrait",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "vis",
          "type": {
            "item": "Visibility"
          }
        },
        {
          "ident": "unsafety",
          "type": {
            "option": {
              "token": "Unsafe"
            }
          }
        },
        {
          "ident": "auto_token",
          "type": {
            "option": {
              "token": "Auto"
            }
          }
        },
        {
          "ident": "trait_token",
          "type": {
            "token": "Trait"
          }
        },
        {
          "ident": "ident",
          "type": {
            "item": "Ident"
          }
        },
        {
          "ident": "generics",
          "type": {
            "item": "Generics"
          }
        },
        {
          "ident": "colon_token",
          "type": {
            "option": {
              "token": "Colon"
            }
          }
        },
        {
          "ident": "supertraits",
          "type": {
            "punctuated": {
              "element": {
                "item": "TypeParamBound"
              },
              "punct": "Add"
            }
          }
        },
        {
          "ident": "brace_token",
          "type": {
            "group": "Brace"
          }
        },
        {
          "ident": "items",
          "type": {
            "vec": {
              "item": "TraitItem"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ItemTraitAlias",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "vis",
          "type": {
            "item": "Visibility"
          }
        },
        {
          "ident": "trait_token",
          "type": {
            "token": "Trait"
          }
        },
        {
          "ident": "ident",
          "type": {
            "item": "Ident"
          }
        },
        {
          "ident": "generics",
          "type": {
            "item": "Generics"
          }
        },
        {
          "ident": "eq_token",
          "type": {
            "token": "Eq"
          }
        },
        {
          "ident": "bounds",
          "type": {
            "punctuated": {
              "element": {
                "item": "TypeParamBound"
              },
              "punct": "Add"
            }
          }
        },
        {
          "ident": "semi_token",
          "type": {
            "token": "Semi"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ItemType",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "vis",
          "type": {
            "item": "Visibility"
          }
        },
        {
          "ident": "type_token",
          "type": {
            "token": "Type"
          }
        },
        {
          "ident": "ident",
          "type": {
            "item": "Ident"
          }
        },
        {
          "ident": "generics",
          "type": {
            "item": "Generics"
          }
        },
        {
          "ident": "eq_token",
          "type": {
            "token": "Eq"
          }
        },
        {
          "ident": "ty",
          "type": {
            "box": {
              "item": "Type"
            }
          }
        },
        {
          "ident": "semi_token",
          "type": {
            "token": "Semi"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ItemUnion",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "vis",
          "type": {
            "item": "Visibility"
          }
        },
        {
          "ident": "union_token",
          "type": {
            "token": "Union"
          }
        },
        {
          "ident": "ident",
          "type": {
            "item": "Ident"
          }
        },
        {
          "ident": "generics",
          "type": {
            "item": "Generics"
          }
        },
        {
          "ident": "fields",
          "type": {
            "item": "FieldsNamed"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ItemUse",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "vis",
          "type": {
            "item": "Visibility"
          }
        },
        {
          "ident": "use_token",
          "type": {
            "token": "Use"
          }
        },
        {
          "ident": "leading_colon",
          "type": {
            "option": {
              "token": "Colon2"
            }
          }
        },
        {
          "ident": "tree",
          "type": {
            "item": "UseTree"
          }
        },
        {
          "ident": "semi_token",
          "type": {
            "token": "Semi"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "ItemVerbatim",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "tts",
          "type": {
            "ext": "TokenStream"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "Label",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "name",
          "type": {
            "item": "Lifetime"
          }
        },
        {
          "ident": "colon_token",
          "type": {
            "token": "Colon"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "Lifetime",
      "features": {
        "any": []
      },
      "fields": [
        {
          "ident": "apostrophe",
          "type": {
            "item": "Span"
          }
        },
        {
          "ident": "ident",
          "type": {
            "item": "Ident"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "LifetimeDef",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "lifetime",
          "type": {
            "item": "Lifetime"
          }
        },
        {
          "ident": "colon_token",
          "type": {
            "option": {
              "token": "Colon"
            }
          }
        },
        {
          "ident": "bounds",
          "type": {
            "punctuated": {
              "element": {
                "item": "Lifetime"
              },
              "punct": "Add"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "enum",
      "ident": "Lit",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "variants": [
        {
          "ident": "Str",
          "fields": [
            {
              "item": "LitStr"
            }
          ]
        },
        {
          "ident": "ByteStr",
          "fields": [
            {
              "item": "LitByteStr"
            }
          ]
        },
        {
          "ident": "Byte",
          "fields": [
            {
              "item": "LitByte"
            }
          ]
        },
        {
          "ident": "Char",
          "fields": [
            {
              "item": "LitChar"
            }
          ]
        },
        {
          "ident": "Int",
          "fields": [
            {
              "item": "LitInt"
            }
          ]
        },
        {
          "ident": "Float",
          "fields": [
            {
              "item": "LitFloat"
            }
          ]
        },
        {
          "ident": "Bool",
          "fields": [
            {
              "item": "LitBool"
            }
          ]
        },
        {
          "ident": "Verbatim",
          "fields": [
            {
              "item": "LitVerbatim"
            }
          ]
        }
      ]
    },
    {
      "node": "struct",
      "ident": "LitBool",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "value",
          "type": {
            "std": "bool"
          }
        },
        {
          "ident": "span",
          "type": {
            "item": "Span"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "LitByte",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "token",
          "type": {
            "ext": "Literal"
          }
        }
      ],
      "all_fields_pub": false
    },
    {
      "node": "struct",
      "ident": "LitByteStr",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "token",
          "type": {
            "ext": "Literal"
          }
        }
      ],
      "all_fields_pub": false
    },
    {
      "node": "struct",
      "ident": "LitChar",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "token",
          "type": {
            "ext": "Literal"
          }
        }
      ],
      "all_fields_pub": false
    },
    {
      "node": "struct",
      "ident": "LitFloat",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "token",
          "type": {
            "ext": "Literal"
          }
        }
      ],
      "all_fields_pub": false
    },
    {
      "node": "struct",
      "ident": "LitInt",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "token",
          "type": {
            "ext": "Literal"
          }
        }
      ],
      "all_fields_pub": false
    },
    {
      "node": "struct",
      "ident": "LitStr",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "token",
          "type": {
            "ext": "Literal"
          }
        }
      ],
      "all_fields_pub": false
    },
    {
      "node": "struct",
      "ident": "LitVerbatim",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "token",
          "type": {
            "ext": "Literal"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "Local",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "let_token",
          "type": {
            "token": "Let"
          }
        },
        {
          "ident": "pats",
          "type": {
            "punctuated": {
              "element": {
                "item": "Pat"
              },
              "punct": "Or"
            }
          }
        },
        {
          "ident": "ty",
          "type": {
            "option": {
              "tuple": [
                {
                  "token": "Colon"
                },
                {
                  "box": {
                    "item": "Type"
                  }
                }
              ]
            }
          }
        },
        {
          "ident": "init",
          "type": {
            "option": {
              "tuple": [
                {
                  "token": "Eq"
                },
                {
                  "box": {
                    "item": "Expr"
                  }
                }
              ]
            }
          }
        },
        {
          "ident": "semi_token",
          "type": {
            "token": "Semi"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "Macro",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "path",
          "type": {
            "item": "Path"
          }
        },
        {
          "ident": "bang_token",
          "type": {
            "token": "Bang"
          }
        },
        {
          "ident": "delimiter",
          "type": {
            "item": "MacroDelimiter"
          }
        },
        {
          "ident": "tts",
          "type": {
            "ext": "TokenStream"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "enum",
      "ident": "MacroDelimiter",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "variants": [
        {
          "ident": "Paren",
          "fields": [
            {
              "group": "Paren"
            }
          ]
        },
        {
          "ident": "Brace",
          "fields": [
            {
              "group": "Brace"
            }
          ]
        },
        {
          "ident": "Bracket",
          "fields": [
            {
              "group": "Bracket"
            }
          ]
        }
      ]
    },
    {
      "node": "enum",
      "ident": "Member",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "variants": [
        {
          "ident": "Named",
          "fields": [
            {
              "item": "Ident"
            }
          ]
        },
        {
          "ident": "Unnamed",
          "fields": [
            {
              "item": "Index"
            }
          ]
        }
      ]
    },
    {
      "node": "enum",
      "ident": "Meta",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "variants": [
        {
          "ident": "Word",
          "fields": [
            {
              "item": "Ident"
            }
          ]
        },
        {
          "ident": "List",
          "fields": [
            {
              "item": "MetaList"
            }
          ]
        },
        {
          "ident": "NameValue",
          "fields": [
            {
              "item": "MetaNameValue"
            }
          ]
        }
      ]
    },
    {
      "node": "struct",
      "ident": "MetaList",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "ident",
          "type": {
            "item": "Ident"
          }
        },
        {
          "ident": "paren_token",
          "type": {
            "group": "Paren"
          }
        },
        {
          "ident": "nested",
          "type": {
            "punctuated": {
              "element": {
                "item": "NestedMeta"
              },
              "punct": "Comma"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "MetaNameValue",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "ident",
          "type": {
            "item": "Ident"
          }
        },
        {
          "ident": "eq_token",
          "type": {
            "token": "Eq"
          }
        },
        {
          "ident": "lit",
          "type": {
            "item": "Lit"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "MethodSig",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "constness",
          "type": {
            "option": {
              "token": "Const"
            }
          }
        },
        {
          "ident": "unsafety",
          "type": {
            "option": {
              "token": "Unsafe"
            }
          }
        },
        {
          "ident": "asyncness",
          "type": {
            "option": {
              "token": "Async"
            }
          }
        },
        {
          "ident": "abi",
          "type": {
            "option": {
              "item": "Abi"
            }
          }
        },
        {
          "ident": "ident",
          "type": {
            "item": "Ident"
          }
        },
        {
          "ident": "decl",
          "type": {
            "item": "FnDecl"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "MethodTurbofish",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "colon2_token",
          "type": {
            "token": "Colon2"
          }
        },
        {
          "ident": "lt_token",
          "type": {
            "token": "Lt"
          }
        },
        {
          "ident": "args",
          "type": {
            "punctuated": {
              "element": {
                "item": "GenericMethodArgument"
              },
              "punct": "Comma"
            }
          }
        },
        {
          "ident": "gt_token",
          "type": {
            "token": "Gt"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "enum",
      "ident": "NestedMeta",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "variants": [
        {
          "ident": "Meta",
          "fields": [
            {
              "item": "Meta"
            }
          ]
        },
        {
          "ident": "Literal",
          "fields": [
            {
              "item": "Lit"
            }
          ]
        }
      ]
    },
    {
      "node": "struct",
      "ident": "ParenthesizedGenericArguments",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "paren_token",
          "type": {
            "group": "Paren"
          }
        },
        {
          "ident": "inputs",
          "type": {
            "punctuated": {
              "element": {
                "item": "Type"
              },
              "punct": "Comma"
            }
          }
        },
        {
          "ident": "output",
          "type": {
            "item": "ReturnType"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "enum",
      "ident": "Pat",
      "features": {
        "any": [
          "full"
        ]
      },
      "variants": [
        {
          "ident": "Wild",
          "fields": [
            {
              "item": "PatWild"
            }
          ]
        },
        {
          "ident": "Ident",
          "fields": [
            {
              "item": "PatIdent"
            }
          ]
        },
        {
          "ident": "Struct",
          "fields": [
            {
              "item": "PatStruct"
            }
          ]
        },
        {
          "ident": "TupleStruct",
          "fields": [
            {
              "item": "PatTupleStruct"
            }
          ]
        },
        {
          "ident": "Path",
          "fields": [
            {
              "item": "PatPath"
            }
          ]
        },
        {
          "ident": "Tuple",
          "fields": [
            {
              "item": "PatTuple"
            }
          ]
        },
        {
          "ident": "Box",
          "fields": [
            {
              "item": "PatBox"
            }
          ]
        },
        {
          "ident": "Ref",
          "fields": [
            {
              "item": "PatRef"
            }
          ]
        },
        {
          "ident": "Lit",
          "fields": [
            {
              "item": "PatLit"
            }
          ]
        },
        {
          "ident": "Range",
          "fields": [
            {
              "item": "PatRange"
            }
          ]
        },
        {
          "ident": "Slice",
          "fields": [
            {
              "item": "PatSlice"
            }
          ]
        },
        {
          "ident": "Macro",
          "fields": [
            {
              "item": "PatMacro"
            }
          ]
        },
        {
          "ident": "Verbatim",
          "fields": [
            {
              "item": "PatVerbatim"
            }
          ]
        }
      ]
    },
    {
      "node": "struct",
      "ident": "PatBox",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "box_token",
          "type": {
            "token": "Box"
          }
        },
        {
          "ident": "pat",
          "type": {
            "box": {
              "item": "Pat"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "PatIdent",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "by_ref",
          "type": {
            "option": {
              "token": "Ref"
            }
          }
        },
        {
          "ident": "mutability",
          "type": {
            "option": {
              "token": "Mut"
            }
          }
        },
        {
          "ident": "ident",
          "type": {
            "item": "Ident"
          }
        },
        {
          "ident": "subpat",
          "type": {
            "option": {
              "tuple": [
                {
                  "token": "At"
                },
                {
                  "box": {
                    "item": "Pat"
                  }
                }
              ]
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "PatLit",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "expr",
          "type": {
            "box": {
              "item": "Expr"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "PatMacro",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "mac",
          "type": {
            "item": "Macro"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "PatPath",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "qself",
          "type": {
            "option": {
              "item": "QSelf"
            }
          }
        },
        {
          "ident": "path",
          "type": {
            "item": "Path"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "PatRange",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "lo",
          "type": {
            "box": {
              "item": "Expr"
            }
          }
        },
        {
          "ident": "limits",
          "type": {
            "item": "RangeLimits"
          }
        },
        {
          "ident": "hi",
          "type": {
            "box": {
              "item": "Expr"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "PatRef",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "and_token",
          "type": {
            "token": "And"
          }
        },
        {
          "ident": "mutability",
          "type": {
            "option": {
              "token": "Mut"
            }
          }
        },
        {
          "ident": "pat",
          "type": {
            "box": {
              "item": "Pat"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "PatSlice",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "bracket_token",
          "type": {
            "group": "Bracket"
          }
        },
        {
          "ident": "front",
          "type": {
            "punctuated": {
              "element": {
                "item": "Pat"
              },
              "punct": "Comma"
            }
          }
        },
        {
          "ident": "middle",
          "type": {
            "option": {
              "box": {
                "item": "Pat"
              }
            }
          }
        },
        {
          "ident": "dot2_token",
          "type": {
            "option": {
              "token": "Dot2"
            }
          }
        },
        {
          "ident": "comma_token",
          "type": {
            "option": {
              "token": "Comma"
            }
          }
        },
        {
          "ident": "back",
          "type": {
            "punctuated": {
              "element": {
                "item": "Pat"
              },
              "punct": "Comma"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "PatStruct",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "path",
          "type": {
            "item": "Path"
          }
        },
        {
          "ident": "brace_token",
          "type": {
            "group": "Brace"
          }
        },
        {
          "ident": "fields",
          "type": {
            "punctuated": {
              "element": {
                "item": "FieldPat"
              },
              "punct": "Comma"
            }
          }
        },
        {
          "ident": "dot2_token",
          "type": {
            "option": {
              "token": "Dot2"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "PatTuple",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "paren_token",
          "type": {
            "group": "Paren"
          }
        },
        {
          "ident": "front",
          "type": {
            "punctuated": {
              "element": {
                "item": "Pat"
              },
              "punct": "Comma"
            }
          }
        },
        {
          "ident": "dot2_token",
          "type": {
            "option": {
              "token": "Dot2"
            }
          }
        },
        {
          "ident": "comma_token",
          "type": {
            "option": {
              "token": "Comma"
            }
          }
        },
        {
          "ident": "back",
          "type": {
            "punctuated": {
              "element": {
                "item": "Pat"
              },
              "punct": "Comma"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "PatTupleStruct",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "path",
          "type": {
            "item": "Path"
          }
        },
        {
          "ident": "pat",
          "type": {
            "item": "PatTuple"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "PatVerbatim",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "tts",
          "type": {
            "ext": "TokenStream"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "PatWild",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "underscore_token",
          "type": {
            "token": "Underscore"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "Path",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "leading_colon",
          "type": {
            "option": {
              "token": "Colon2"
            }
          }
        },
        {
          "ident": "segments",
          "type": {
            "punctuated": {
              "element": {
                "item": "PathSegment"
              },
              "punct": "Colon2"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "enum",
      "ident": "PathArguments",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "variants": [
        {
          "ident": "None",
          "fields": []
        },
        {
          "ident": "AngleBracketed",
          "fields": [
            {
              "item": "AngleBracketedGenericArguments"
            }
          ]
        },
        {
          "ident": "Parenthesized",
          "fields": [
            {
              "item": "ParenthesizedGenericArguments"
            }
          ]
        }
      ]
    },
    {
      "node": "struct",
      "ident": "PathSegment",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "ident",
          "type": {
            "item": "Ident"
          }
        },
        {
          "ident": "arguments",
          "type": {
            "item": "PathArguments"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "PredicateEq",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "lhs_ty",
          "type": {
            "item": "Type"
          }
        },
        {
          "ident": "eq_token",
          "type": {
            "token": "Eq"
          }
        },
        {
          "ident": "rhs_ty",
          "type": {
            "item": "Type"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "PredicateLifetime",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "lifetime",
          "type": {
            "item": "Lifetime"
          }
        },
        {
          "ident": "colon_token",
          "type": {
            "token": "Colon"
          }
        },
        {
          "ident": "bounds",
          "type": {
            "punctuated": {
              "element": {
                "item": "Lifetime"
              },
              "punct": "Add"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "PredicateType",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "lifetimes",
          "type": {
            "option": {
              "item": "BoundLifetimes"
            }
          }
        },
        {
          "ident": "bounded_ty",
          "type": {
            "item": "Type"
          }
        },
        {
          "ident": "colon_token",
          "type": {
            "token": "Colon"
          }
        },
        {
          "ident": "bounds",
          "type": {
            "punctuated": {
              "element": {
                "item": "TypeParamBound"
              },
              "punct": "Add"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "QSelf",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "lt_token",
          "type": {
            "token": "Lt"
          }
        },
        {
          "ident": "ty",
          "type": {
            "box": {
              "item": "Type"
            }
          }
        },
        {
          "ident": "position",
          "type": {
            "std": "usize"
          }
        },
        {
          "ident": "as_token",
          "type": {
            "option": {
              "token": "As"
            }
          }
        },
        {
          "ident": "gt_token",
          "type": {
            "token": "Gt"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "enum",
      "ident": "RangeLimits",
      "features": {
        "any": [
          "full"
        ]
      },
      "variants": [
        {
          "ident": "HalfOpen",
          "fields": [
            {
              "token": "Dot2"
            }
          ]
        },
        {
          "ident": "Closed",
          "fields": [
            {
              "token": "DotDotEq"
            }
          ]
        }
      ]
    },
    {
      "node": "enum",
      "ident": "ReturnType",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "variants": [
        {
          "ident": "Default",
          "fields": []
        },
        {
          "ident": "Type",
          "fields": [
            {
              "token": "RArrow"
            },
            {
              "box": {
                "item": "Type"
              }
            }
          ]
        }
      ]
    },
    {
      "node": "struct",
      "ident": "Span",
      "features": {
        "any": []
      },
      "fields": [],
      "all_fields_pub": true
    },
    {
      "node": "enum",
      "ident": "Stmt",
      "features": {
        "any": [
          "full"
        ]
      },
      "variants": [
        {
          "ident": "Local",
          "fields": [
            {
              "item": "Local"
            }
          ]
        },
        {
          "ident": "Item",
          "fields": [
            {
              "item": "Item"
            }
          ]
        },
        {
          "ident": "Expr",
          "fields": [
            {
              "item": "Expr"
            }
          ]
        },
        {
          "ident": "Semi",
          "fields": [
            {
              "item": "Expr"
            },
            {
              "token": "Semi"
            }
          ]
        }
      ]
    },
    {
      "node": "struct",
      "ident": "TraitBound",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "paren_token",
          "type": {
            "option": {
              "group": "Paren"
            }
          }
        },
        {
          "ident": "modifier",
          "type": {
            "item": "TraitBoundModifier"
          }
        },
        {
          "ident": "lifetimes",
          "type": {
            "option": {
              "item": "BoundLifetimes"
            }
          }
        },
        {
          "ident": "path",
          "type": {
            "item": "Path"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "enum",
      "ident": "TraitBoundModifier",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "variants": [
        {
          "ident": "None",
          "fields": []
        },
        {
          "ident": "Maybe",
          "fields": [
            {
              "token": "Question"
            }
          ]
        }
      ]
    },
    {
      "node": "enum",
      "ident": "TraitItem",
      "features": {
        "any": [
          "full"
        ]
      },
      "variants": [
        {
          "ident": "Const",
          "fields": [
            {
              "item": "TraitItemConst"
            }
          ]
        },
        {
          "ident": "Method",
          "fields": [
            {
              "item": "TraitItemMethod"
            }
          ]
        },
        {
          "ident": "Type",
          "fields": [
            {
              "item": "TraitItemType"
            }
          ]
        },
        {
          "ident": "Macro",
          "fields": [
            {
              "item": "TraitItemMacro"
            }
          ]
        },
        {
          "ident": "Verbatim",
          "fields": [
            {
              "item": "TraitItemVerbatim"
            }
          ]
        }
      ]
    },
    {
      "node": "struct",
      "ident": "TraitItemConst",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "const_token",
          "type": {
            "token": "Const"
          }
        },
        {
          "ident": "ident",
          "type": {
            "item": "Ident"
          }
        },
        {
          "ident": "colon_token",
          "type": {
            "token": "Colon"
          }
        },
        {
          "ident": "ty",
          "type": {
            "item": "Type"
          }
        },
        {
          "ident": "default",
          "type": {
            "option": {
              "tuple": [
                {
                  "token": "Eq"
                },
                {
                  "item": "Expr"
                }
              ]
            }
          }
        },
        {
          "ident": "semi_token",
          "type": {
            "token": "Semi"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "TraitItemMacro",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "mac",
          "type": {
            "item": "Macro"
          }
        },
        {
          "ident": "semi_token",
          "type": {
            "option": {
              "token": "Semi"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "TraitItemMethod",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "sig",
          "type": {
            "item": "MethodSig"
          }
        },
        {
          "ident": "default",
          "type": {
            "option": {
              "item": "Block"
            }
          }
        },
        {
          "ident": "semi_token",
          "type": {
            "option": {
              "token": "Semi"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "TraitItemType",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "type_token",
          "type": {
            "token": "Type"
          }
        },
        {
          "ident": "ident",
          "type": {
            "item": "Ident"
          }
        },
        {
          "ident": "generics",
          "type": {
            "item": "Generics"
          }
        },
        {
          "ident": "colon_token",
          "type": {
            "option": {
              "token": "Colon"
            }
          }
        },
        {
          "ident": "bounds",
          "type": {
            "punctuated": {
              "element": {
                "item": "TypeParamBound"
              },
              "punct": "Add"
            }
          }
        },
        {
          "ident": "default",
          "type": {
            "option": {
              "tuple": [
                {
                  "token": "Eq"
                },
                {
                  "item": "Type"
                }
              ]
            }
          }
        },
        {
          "ident": "semi_token",
          "type": {
            "token": "Semi"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "TraitItemVerbatim",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "tts",
          "type": {
            "ext": "TokenStream"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "enum",
      "ident": "Type",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "variants": [
        {
          "ident": "Slice",
          "fields": [
            {
              "item": "TypeSlice"
            }
          ]
        },
        {
          "ident": "Array",
          "fields": [
            {
              "item": "TypeArray"
            }
          ]
        },
        {
          "ident": "Ptr",
          "fields": [
            {
              "item": "TypePtr"
            }
          ]
        },
        {
          "ident": "Reference",
          "fields": [
            {
              "item": "TypeReference"
            }
          ]
        },
        {
          "ident": "BareFn",
          "fields": [
            {
              "item": "TypeBareFn"
            }
          ]
        },
        {
          "ident": "Never",
          "fields": [
            {
              "item": "TypeNever"
            }
          ]
        },
        {
          "ident": "Tuple",
          "fields": [
            {
              "item": "TypeTuple"
            }
          ]
        },
        {
          "ident": "Path",
          "fields": [
            {
              "item": "TypePath"
            }
          ]
        },
        {
          "ident": "TraitObject",
          "fields": [
            {
              "item": "TypeTraitObject"
            }
          ]
        },
        {
          "ident": "ImplTrait",
          "fields": [
            {
              "item": "TypeImplTrait"
            }
          ]
        },
        {
          "ident": "Paren",
          "fields": [
            {
              "item": "TypeParen"
            }
          ]
        },
        {
          "ident": "Group",
          "fields": [
            {
              "item": "TypeGroup"
            }
          ]
        },
        {
          "ident": "Infer",
          "fields": [
            {
              "item": "TypeInfer"
            }
          ]
        },
        {
          "ident": "Macro",
          "fields": [
            {
              "item": "TypeMacro"
            }
          ]
        },
        {
          "ident": "Verbatim",
          "fields": [
            {
              "item": "TypeVerbatim"
            }
          ]
        }
      ]
    },
    {
      "node": "struct",
      "ident": "TypeArray",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "bracket_token",
          "type": {
            "group": "Bracket"
          }
        },
        {
          "ident": "elem",
          "type": {
            "box": {
              "item": "Type"
            }
          }
        },
        {
          "ident": "semi_token",
          "type": {
            "token": "Semi"
          }
        },
        {
          "ident": "len",
          "type": {
            "item": "Expr"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "TypeBareFn",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "lifetimes",
          "type": {
            "option": {
              "item": "BoundLifetimes"
            }
          }
        },
        {
          "ident": "unsafety",
          "type": {
            "option": {
              "token": "Unsafe"
            }
          }
        },
        {
          "ident": "abi",
          "type": {
            "option": {
              "item": "Abi"
            }
          }
        },
        {
          "ident": "fn_token",
          "type": {
            "token": "Fn"
          }
        },
        {
          "ident": "paren_token",
          "type": {
            "group": "Paren"
          }
        },
        {
          "ident": "inputs",
          "type": {
            "punctuated": {
              "element": {
                "item": "BareFnArg"
              },
              "punct": "Comma"
            }
          }
        },
        {
          "ident": "variadic",
          "type": {
            "option": {
              "token": "Dot3"
            }
          }
        },
        {
          "ident": "output",
          "type": {
            "item": "ReturnType"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "TypeGroup",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "group_token",
          "type": {
            "group": "Group"
          }
        },
        {
          "ident": "elem",
          "type": {
            "box": {
              "item": "Type"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "TypeImplTrait",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "impl_token",
          "type": {
            "token": "Impl"
          }
        },
        {
          "ident": "bounds",
          "type": {
            "punctuated": {
              "element": {
                "item": "TypeParamBound"
              },
              "punct": "Add"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "TypeInfer",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "underscore_token",
          "type": {
            "token": "Underscore"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "TypeMacro",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "mac",
          "type": {
            "item": "Macro"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "TypeNever",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "bang_token",
          "type": {
            "token": "Bang"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "TypeParam",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "ident",
          "type": {
            "item": "Ident"
          }
        },
        {
          "ident": "colon_token",
          "type": {
            "option": {
              "token": "Colon"
            }
          }
        },
        {
          "ident": "bounds",
          "type": {
            "punctuated": {
              "element": {
                "item": "TypeParamBound"
              },
              "punct": "Add"
            }
          }
        },
        {
          "ident": "eq_token",
          "type": {
            "option": {
              "token": "Eq"
            }
          }
        },
        {
          "ident": "default",
          "type": {
            "option": {
              "item": "Type"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "enum",
      "ident": "TypeParamBound",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "variants": [
        {
          "ident": "Trait",
          "fields": [
            {
              "item": "TraitBound"
            }
          ]
        },
        {
          "ident": "Lifetime",
          "fields": [
            {
              "item": "Lifetime"
            }
          ]
        }
      ]
    },
    {
      "node": "struct",
      "ident": "TypeParen",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "paren_token",
          "type": {
            "group": "Paren"
          }
        },
        {
          "ident": "elem",
          "type": {
            "box": {
              "item": "Type"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "TypePath",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "qself",
          "type": {
            "option": {
              "item": "QSelf"
            }
          }
        },
        {
          "ident": "path",
          "type": {
            "item": "Path"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "TypePtr",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "star_token",
          "type": {
            "token": "Star"
          }
        },
        {
          "ident": "const_token",
          "type": {
            "option": {
              "token": "Const"
            }
          }
        },
        {
          "ident": "mutability",
          "type": {
            "option": {
              "token": "Mut"
            }
          }
        },
        {
          "ident": "elem",
          "type": {
            "box": {
              "item": "Type"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "TypeReference",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "and_token",
          "type": {
            "token": "And"
          }
        },
        {
          "ident": "lifetime",
          "type": {
            "option": {
              "item": "Lifetime"
            }
          }
        },
        {
          "ident": "mutability",
          "type": {
            "option": {
              "token": "Mut"
            }
          }
        },
        {
          "ident": "elem",
          "type": {
            "box": {
              "item": "Type"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "TypeSlice",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "bracket_token",
          "type": {
            "group": "Bracket"
          }
        },
        {
          "ident": "elem",
          "type": {
            "box": {
              "item": "Type"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "TypeTraitObject",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "dyn_token",
          "type": {
            "option": {
              "token": "Dyn"
            }
          }
        },
        {
          "ident": "bounds",
          "type": {
            "punctuated": {
              "element": {
                "item": "TypeParamBound"
              },
              "punct": "Add"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "TypeTuple",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "paren_token",
          "type": {
            "group": "Paren"
          }
        },
        {
          "ident": "elems",
          "type": {
            "punctuated": {
              "element": {
                "item": "Type"
              },
              "punct": "Comma"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "TypeVerbatim",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "tts",
          "type": {
            "ext": "TokenStream"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "enum",
      "ident": "UnOp",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "variants": [
        {
          "ident": "Deref",
          "fields": [
            {
              "token": "Star"
            }
          ]
        },
        {
          "ident": "Not",
          "fields": [
            {
              "token": "Bang"
            }
          ]
        },
        {
          "ident": "Neg",
          "fields": [
            {
              "token": "Sub"
            }
          ]
        }
      ]
    },
    {
      "node": "struct",
      "ident": "UseGlob",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "star_token",
          "type": {
            "token": "Star"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "UseGroup",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "brace_token",
          "type": {
            "group": "Brace"
          }
        },
        {
          "ident": "items",
          "type": {
            "punctuated": {
              "element": {
                "item": "UseTree"
              },
              "punct": "Comma"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "UseName",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "ident",
          "type": {
            "item": "Ident"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "UsePath",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "ident",
          "type": {
            "item": "Ident"
          }
        },
        {
          "ident": "colon2_token",
          "type": {
            "token": "Colon2"
          }
        },
        {
          "ident": "tree",
          "type": {
            "box": {
              "item": "UseTree"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "UseRename",
      "features": {
        "any": [
          "full"
        ]
      },
      "fields": [
        {
          "ident": "ident",
          "type": {
            "item": "Ident"
          }
        },
        {
          "ident": "as_token",
          "type": {
            "token": "As"
          }
        },
        {
          "ident": "rename",
          "type": {
            "item": "Ident"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "enum",
      "ident": "UseTree",
      "features": {
        "any": [
          "full"
        ]
      },
      "variants": [
        {
          "ident": "Path",
          "fields": [
            {
              "item": "UsePath"
            }
          ]
        },
        {
          "ident": "Name",
          "fields": [
            {
              "item": "UseName"
            }
          ]
        },
        {
          "ident": "Rename",
          "fields": [
            {
              "item": "UseRename"
            }
          ]
        },
        {
          "ident": "Glob",
          "fields": [
            {
              "item": "UseGlob"
            }
          ]
        },
        {
          "ident": "Group",
          "fields": [
            {
              "item": "UseGroup"
            }
          ]
        }
      ]
    },
    {
      "node": "struct",
      "ident": "Variant",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "attrs",
          "type": {
            "vec": {
              "item": "Attribute"
            }
          }
        },
        {
          "ident": "ident",
          "type": {
            "item": "Ident"
          }
        },
        {
          "ident": "fields",
          "type": {
            "item": "Fields"
          }
        },
        {
          "ident": "discriminant",
          "type": {
            "option": {
              "tuple": [
                {
                  "token": "Eq"
                },
                {
                  "item": "Expr"
                }
              ]
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "VisCrate",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "crate_token",
          "type": {
            "token": "Crate"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "VisPublic",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "pub_token",
          "type": {
            "token": "Pub"
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "struct",
      "ident": "VisRestricted",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "pub_token",
          "type": {
            "token": "Pub"
          }
        },
        {
          "ident": "paren_token",
          "type": {
            "group": "Paren"
          }
        },
        {
          "ident": "in_token",
          "type": {
            "option": {
              "token": "In"
            }
          }
        },
        {
          "ident": "path",
          "type": {
            "box": {
              "item": "Path"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "enum",
      "ident": "Visibility",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "variants": [
        {
          "ident": "Public",
          "fields": [
            {
              "item": "VisPublic"
            }
          ]
        },
        {
          "ident": "Crate",
          "fields": [
            {
              "item": "VisCrate"
            }
          ]
        },
        {
          "ident": "Restricted",
          "fields": [
            {
              "item": "VisRestricted"
            }
          ]
        },
        {
          "ident": "Inherited",
          "fields": []
        }
      ]
    },
    {
      "node": "struct",
      "ident": "WhereClause",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "fields": [
        {
          "ident": "where_token",
          "type": {
            "token": "Where"
          }
        },
        {
          "ident": "predicates",
          "type": {
            "punctuated": {
              "element": {
                "item": "WherePredicate"
              },
              "punct": "Comma"
            }
          }
        }
      ],
      "all_fields_pub": true
    },
    {
      "node": "enum",
      "ident": "WherePredicate",
      "features": {
        "any": [
          "full",
          "derive"
        ]
      },
      "variants": [
        {
          "ident": "Type",
          "fields": [
            {
              "item": "PredicateType"
            }
          ]
        },
        {
          "ident": "Lifetime",
          "fields": [
            {
              "item": "PredicateLifetime"
            }
          ]
        },
        {
          "ident": "Eq",
          "fields": [
            {
              "item": "PredicateEq"
            }
          ]
        }
      ]
    }
  ],
  "tokens": {
    "Abstract": "abstract",
    "Add": "+",
    "AddEq": "+=",
    "And": "&",
    "AndAnd": "&&",
    "AndEq": "&=",
    "As": "as",
    "Async": "async",
    "At": "@",
    "Auto": "auto",
    "Bang": "!",
    "Become": "become",
    "Box": "box",
    "Break": "break",
    "Caret": "^",
    "CaretEq": "^=",
    "Colon": ":",
    "Colon2": "::",
    "Comma": ",",
    "Const": "const",
    "Continue": "continue",
    "Crate": "crate",
    "Default": "default",
    "Div": "/",
    "DivEq": "/=",
    "Do": "do",
    "Dot": ".",
    "Dot2": "..",
    "Dot3": "...",
    "DotDotEq": "..=",
    "Dyn": "dyn",
    "Else": "else",
    "Enum": "enum",
    "Eq": "=",
    "EqEq": "==",
    "Existential": "existential",
    "Extern": "extern",
    "FatArrow": "=>",
    "Final": "final",
    "Fn": "fn",
    "For": "for",
    "Ge": ">=",
    "Gt": ">",
    "If": "if",
    "Impl": "impl",
    "In": "in",
    "LArrow": "<-",
    "Le": "<=",
    "Let": "let",
    "Loop": "loop",
    "Lt": "<",
    "Macro": "macro",
    "Match": "match",
    "Mod": "mod",
    "Move": "move",
    "MulEq": "*=",
    "Mut": "mut",
    "Ne": "!=",
    "Or": "|",
    "OrEq": "|=",
    "OrOr": "||",
    "Override": "override",
    "Pound": "#",
    "Priv": "priv",
    "Pub": "pub",
    "Question": "?",
    "RArrow": "->",
    "Ref": "ref",
    "Rem": "%",
    "RemEq": "%=",
    "Return": "return",
    "SelfType": "Self",
    "SelfValue": "self",
    "Semi": ";",
    "Shl": "<<",
    "ShlEq": "<<=",
    "Shr": ">>",
    "ShrEq": ">>=",
    "Star": "*",
    "Static": "static",
    "Struct": "struct",
    "Sub": "-",
    "SubEq": "-=",
    "Super": "super",
    "Tilde": "~",
    "Trait": "trait",
    "Try": "try",
    "Type": "type",
    "Typeof": "typeof",
    "Underscore": "_",
    "Union": "union",
    "Unsafe": "unsafe",
    "Unsized": "unsized",
    "Use": "use",
    "Virtual": "virtual",
    "Where": "where",
    "While": "while",
    "Yield": "yield"
  }
}